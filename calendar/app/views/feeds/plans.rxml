xml.instruct!
#MGS- add a reference to the xsl stylesheet to display the feed more cleanly to a browser
xml.instruct! "xml-stylesheet", :type => "text/xsl", :href => "/rss.xsl", :media => "screen"
#MGS- only supporting RSS 2.0 for now
xml.rss "version" => "2.0" do
  xml.channel do

    xml.title         @feed_title
    xml.description   @feed_description
  	params_for_url = params.dup
    #MGS- so this rxml template can be used by multiple actions, build the url dynamically here
    params_for_url[:only_path] = false
    #MES- Set the ID to the current login, so all URLs we present are based on login
  	params_for_url[:id] = @current_user.login
    xml.link          url_for( params_for_url )
    xml.ttl           60

    #MGS- get the timezone from the user
    tz = @current_user.tz

    @plans.each do |plan_display|
    
      xml.item do
        #MGS- extract some info from the plan display object
        plan = plan_display.plan

        #MGS- handle the different visibility levels...fun
        case plan_display.visibility
          when Planner::USER_VISIBILITY_LEVEL_OWNER, Planner::USER_VISIBILITY_LEVEL_DETAILS
            plan_url = url_for(:controller => 'plans', :action => 'show', :id => plan.id, :cal_id => @current_user.planner.id, :only_path => false)
            #MGS- for the owner and details view, we can display the same information
            xml.link    plan_url

            #MGS- build the title of this item; handle a blank plan name
            plan_name_fixed = plan.name.blank? ? "We've got Plans": plan.name
            xml.title plan_name_fixed
          when Planner::USER_VISIBILITY_LEVEL_AVAILABILITY
            #MGS- for the availability view, you can't click through to the actual plan
            # so the link we display is back to the first attendee's profile page for lack
            # of a better option
            #MGS- availibility level view should obfuscate the plan name and not show the who field

            #MGS- build the title of this item; for availability level views, we only show
            # an obsfucated title
            xml.title "Some plans are brewing..."
            xml.link  url_for(:controller => 'planners', :action => 'show', :id => @current_user.planner.id, :only_path => false)
        end

        #MGS- set the guid to the unique uri
        xml.guid    plan.guid, :isPermaLink => false


        #MGS- set the published time of the plan; this can just be the original created date of the plan
        # needs to fit rfc2822 spec
        # MGS- TODO maybe we want to do something fancy later?
        xml.pubDate plan.created_at.rfc2822
      end
    end
  end
end
